<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@// Source: riak.proto
//   Date: 2015-01-16 03:40:25


namespace Riak\Client\ProtoBuf {

    class RpbYokozunaSchemaPutReq extends \DrSlump\Protobuf\Message
    {
        /** @var \DrSlump\Protobuf\Descriptor */
        protected static $__descriptor;
        /** @var \Closure[] */
        protected static $__extensions = array();

        public static function descriptor()
        {
            $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, '.RpbYokozunaSchemaPutReq');

            // required message schema = 1
            $f = new \DrSlump\Protobuf\Field();
            $f->number = 1;
            $f->name   = "schema";
            $f->rule   = \DrSlump\Protobuf\Protobuf::RULE_REQUIRED;
            $f->type   = \DrSlump\Protobuf\Protobuf::TYPE_MESSAGE;

            $f->reference = '\Riak\Client\ProtoBuf\RpbYokozunaSchema';

            $descriptor->addField($f);

            foreach (self::$__extensions as $cb) {
                $descriptor->addField($cb(), true);
            }

            return $descriptor;
        }

        /**
         * Check if "schema" has a value
         *
         * @return boolean
         */
        public function hasSchema()
        {
            return isset($this->schema);
        }

        /**
         * Clear "schema" value
         */
        public function clearSchema()
        {
            unset($this->schema);
        }

        /**
         * Get "schema" value
         * @return RpbYokozunaSchema                  *
         *
         */
        public function getSchema()
        {
            return $this->schema;
        }

        /**
         * Set "schema" value
         *
         * @param RpbYokozunaSchema $value
         */
        public function setSchema($value)
        {
            return $this->schema = $value;
        }
    }
}
